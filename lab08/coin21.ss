;coin21.ss
(define VARIANT 21)
(define LAST-DIGIT-OF-GROUP-NUMBER 8)
(define KINDS-OF-COINS 5)

(define (first-denomination kinds-of-coins)
  (cond((= kinds-of-coins 1) 1)
       ((= kinds-of-coins 2) 3)
       ((= kinds-of-coins 3) 10)
       ((= kinds-of-coins 4) 20)
       ((= kinds-of-coins 5) 50)
       (#t 0)
  )
)

(define (count-change amount)
  (display "______\n amount: ")
  (display amount)
  (newline)
  (display "KINDS-OF-COINS: ")
  (display KINDS-OF-COINS)
  (newline)
  (let(
      (largest-coin (first-denomination KINDS-OF-COINS))
      )
    (display "largest-coin: ")
    (display largest-coin)
    (newline)
    (cond((and (< 0 amount)(< 0 KINDS-OF-COINS)(< 0 largest-coin))
          (display "List of coin denominations: ")
            (denomination-list KINDS-OF-COINS)
            (display "count-change= ")
            (cc amount KINDS-OF-COINS)
            )
          (#t (display "Improper parameter value!\ncount-change= ") -1)
    )
  )
)

(define(NOT? x?)(= 0(cond(x? 1)(#t 0))))

(define (pier? x? y?)
  (NOT? (or x? y?))
)

(define (cc amount kinds-of-coins)
  (cond((= amount 0) 1)
       ((pier? (< amount 0)(= kinds-of-coins 0))
        (+ (cc amount (- kinds-of-coins 1))
           (cc (- amount (first-denomination kinds-of-coins)) kinds-of-coins))
       )
       (#t 0)
  )
)

(define (denomination-list kinds-of-coins)
  (cond((= kinds-of-coins 0) (newline) 0)
       (#t (display (first-denomination kinds-of-coins))
             (display " ")
             (denomination-list (- kinds-of-coins 1))
       )
  )
)

(define (GR-AMOUNT)
  (remainder (+ (* 100 LAST-DIGIT-OF-GROUP-NUMBER) VARIANT) 231)
)

(display "Variant ")
(display VARIANT)
(newline)
(newline)
(display (count-change 100)) (newline)
(display (count-change(GR-AMOUNT))) (newline)
(set! KINDS-OF-COINS 13)
(display (count-change 100)) (newline)
(display "(c) Moiseenkov I.P. 2021\n")
             
       
   